# 2.1 MICROBIOLOGY TASK 
mydata_microb <- read.csv("https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/Python/Dataset/mcgc.tsv",header = T,sep="\t")


print(mydata_microb)

sort_data <- data.frame(
  strain_1_rep1_WT = c(mydata_microb$A1, mydata_microb$B1, mydata_microb$C1),
  strain_1_rep2_WT = c(mydata_microb$A3, mydata_microb$B3, mydata_microb$C3),
  strain_1_rep1_mut = c(mydata_microb$A2, mydata_microb$B2, mydata_microb$C2),
  strain_1_rep2_mut = c(mydata_microb$A4, mydata_microb$B4, mydata_microb$C4),
  strain_2_rep1_WT = c(mydata_microb$A5,mydata_microb$B5, mydata_microb$C5), 
  strain_2_rep2_WT = c(mydata_microb$A7, mydata_microb$B7, mydata_microb$C7),
  strain_2_rep1_mut = c(mydata_microb$A6, mydata_microb$B6, mydata_microb$C6),
  strain_2_rep2_mut = c(mydata_microb$A8, mydata_microb$B8, mydata_microb$C8),
  strain_3_rep1_WT = c(mydata_microb$A9, mydata_microb$B9, mydata_microb$C9),
  strain_3_rep2_WT = c(mydata_microb$A11, mydata_microb$B11, mydata_microb$C11),
  strain_3_rep1_mut = c(mydata_microb$A10, mydata_microb$B10, mydata_microb$C10),
  strain_3_rep2_mut = c(mydata_microb$A12, mydata_microb$B12, mydata_microb$C12), 
  time_growth = c(mydata_microb$time[1:97],mydata_microb$time[1:97],mydata_microb$time[1:97] )
)



# Lets find the means of the two technical replicate by of each strains by adding new column
library(dplyr)
sort_data1 <-sort_data %>%
  mutate(mean_strain_1_WT= (strain_1_rep1_WT*strain_1_rep2_WT)/2)
       
sort_data2 <-sort_data1 %>%
  mutate(mean_strain_1_mut= (strain_1_rep1_mut*strain_1_rep2_mut)/2)

sort_data3 <-sort_data2 %>%
  mutate(mean_strain_2_WT= (strain_2_rep1_WT*strain_2_rep2_WT)/2)

sort_data4 <-sort_data3 %>%
  mutate(mean_strain_2_mut= (strain_2_rep1_mut*strain_2_rep2_mut)/2)

sort_data5 <-sort_data4 %>%
  mutate(mean_strain_3_WT= (strain_3_rep1_WT*strain_3_rep2_WT)/2)

sort_data6 <-sort_data5 %>%
  mutate(mean_strain_3_mut= (strain_3_rep1_mut*strain_3_rep2_mut)/2)


#  now let select the columns of interest from our big dataset 

selected_sort_data <- select(sort_data6, time_growth,mean_strain_1_WT,mean_strain_1_mut, mean_strain_2_WT, mean_strain_2_mut, mean_strain_3_WT,mean_strain_3_mut)


options(repr.plot.width = 10, repr.plot.height = 8)



# NOw lets proceed to plotting 
#PLOT 1 Mean strain1 WT vs KO 

plot(selected_sort_data$time_growth,selected_sort_data$mean_strain_1_WT, type = "l", col = "blue",
     xlab = "Time (mins)", ylab = "OD600", main = "Strain_1_ WT vs KO", lty = 1, ylim = c(0, max(selected_sort_data[,-1], na.rm = TRUE)))
lines(selected_sort_data$time_growth, selected_sort_data$mean_strain_1_mut, col = "red", lty = 2)


legend("topleft", legend = c("WT", "KO"), col = c("blue", "red"), lty = c(1, 2), cex = 0.9)


#PLOT 2 mean strain 2 WT vs KO 
plot(selected_sort_data$time_growth,selected_sort_data$mean_strain_2_WT, type = "l", col = "blue",
     xlab = "Time (mins)", ylab = "OD600", main = "Strain_2_ WT vs KO", lty = 1, ylim = c(0, max(selected_sort_data[,-1], na.rm = TRUE)))
lines(selected_sort_data$time_growth, selected_sort_data$mean_strain_2_mut, col = "red", lty = 2)


legend("topleft", legend = c("WT", "KO"), col = c("blue", "red"), lty = c(1, 2), cex = 0.9)


# PLOT 3 
# MEAN Strain 3 WT Vs KO 
plot(selected_sort_data$time_growth,selected_sort_data$mean_strain_3_WT, type = "l", col = "blue",
     xlab = "Time (mins)", ylab = "OD600", main = "Strain_3_ WT vs KO", lty = 1, ylim = c(0, max(selected_sort_data[,-1], na.rm = TRUE)))
lines(selected_sort_data$time_growth, selected_sort_data$mean_strain_3_mut, col = "red", lty = 2)


legend("topleft", legend = c("WT", "KO"), col = c("blue", "red"), lty = c(1, 2), cex = 0.9)




carrying_capacity<-function(final_od,time_points,od_values) {
  target_od <- final_od*0.8 # Calculates 80% of the final OD (representing the carrying capacity)
  time_for_capacity<-time_points[min(which(od_values>=target_od))] # Identify the point at which OD value reaches or exceeds the target OD
}


for (i in 1:ncol(sort_data)) {  
  final_od<-max(sort_data[[i]])
  result<-carrying_capacity(final_od,sort_data$time_growth,sort_data[[i]])
  print(paste("Time it takes to reach the carrying capacity for",colnames(sort_data)[i],"is",result,"minutes"))
}


# CREATE A SCATTER PLOT AND BOX PLOT


# Create a dataframe 

capacity_df <- data.frame(Strain = colnames(sort_data)[-13]) 


# Define empty column named OD_capacity

capacity_df$OD_capacity <- c()

for (i in 1:12) {  # Skip the time column
  final_od <- max(sort_data[[i]])
  result <- carrying_capacity(final_od, sort_data$time_growth, sort_data[[i]])
  capacity_df$OD_capacity[i] <- result  # Store the result
}
print(capacity_df)


library(dplyr)
wt_strains<-c("Strain_1_Rep_1_wt","Strain_1_Rep_2_wt",
              "Strain_2_Rep_1_wt","Strain_1_Rep_2_wt",
              "Strain_3_Rep_1_wt","Strain_3_Rep_2_wt")

ko_strains<-c("Strain_1_Rep_1_mutant","Strain_1_Rep_2_mutant",
              "Strain_2_Rep_1_mutant","Strain_1_Rep_2_mutant",
              "Strain_3_Rep_1_mutant","Strain_3_Rep_2_mutant")


# Define the strain names for categorization
wt_strains_capacity <- capacity_df[c(1,2,5,6,9,10), "OD_capacity"]

  
print(wt_strains_capacity)

ko_strains_capacity<-capacity_df[c(3,4,7,8,11,12), "OD_capacity"]

print(ko_strains_capacity)

# Perform t-test

t_test_result<-t.test(wt_strains_capacity,ko_strains_capacity)
print(t_test_result)

t_test_result$statistic # t-value
t_test_result$parameter # df
t_test_result$p.value #statistical significance
t_test_result$estimate #means of two groups (wild-type vs knock-out strains)
t_test_result$conf.int # confidence interval


wt_mean<-t_test_result$estimate[1] # wild-type mean
ko_mean<-t_test_result$estimate[2] # knock-out mean


# Create a scatter plot

plot(wt_strains_capacity,ko_strains_capacity, 
     main="Wild-type vs knock-out strains carrying capacity",
     xlab="Strain", 
     ylab="Time to reach the carrying capacity (mins)", 
     col="blue", 
     pch=19)

boxplot_data<-list(wt_strains_capacity, ko_strains_capacity)

boxplot(boxplot_data,
        xlab="Strain",
        ylab="Time to reach the carrying capacity (mins)",
        main="Wild type vs knock-out strains carrying capacity",
        notch=FALSE # in case you'd like to add the median
        
)

# CONCLUSION 
# their is a startistical difference between carrying capacity of WT and Mut 
# The null hypothesis would be rejected. 
